<Window 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Class="MetaLite_Viewer.Subwindow.StatisticDialogBox"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:local="clr-namespace:MetaLite_Viewer.Subwindow"
    xmlns:helper="clr-namespace:MetaLite_Viewer.Helper"
    xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
    Title="Expression"
    
    SizeToContent="WidthAndHeight"
    MinHeight="10"
    ResizeMode="NoResize"
    ShowInTaskbar="False"
    WindowStartupLocation="CenterOwner" 
    Background="#AF333333" 
    ContentRendered="Window_ContentRendered"
    FocusManager.FocusedElement="{Binding ElementName=RedComboBox}">
    <Window.Resources>
        <Storyboard x:Key="WaitStoryboard" RepeatBehavior="Forever" >
            <DoubleAnimation
            Storyboard.TargetName="Wait"
            Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
            From="0"
            To="90"
            BeginTime="0:0:0"
            Duration="0:0:0.5"      
            />
            <DoubleAnimation
            Storyboard.TargetName="Wait"
            Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
            From="90"
            To="180"
            BeginTime="0:0:0.5"
            Duration="0:0:0.25"
            />
            <DoubleAnimation
            Storyboard.TargetName="Wait"
            Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
            From="180"
            To="270"
            BeginTime="0:0:0.75"
            Duration="0:0:0.125"
            
            />
            <DoubleAnimation
            Storyboard.TargetName="Wait"
            Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
            From="270"
            To="360"
                BeginTime="0:0:0.875"
            Duration="0:0:0.5"
            DecelerationRatio="1"            
            />
        </Storyboard>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <helper:BooleanToVisibilityInvertConverter x:Key="BoolToVisIvt"/>
        <helper:DoubleToStringConverter x:Key="Dou2Str"/>
    </Window.Resources>

    <Grid x:Name="thisWindow">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Vertical" HorizontalAlignment="Left" Margin="30,10,30,10">
            <Label Foreground="#FFDDDDDD" Margin="-15,0,10,5" >Channel select</Label>

            <Border Grid.Column="0" BorderBrush="DarkGray" Margin="0,0,10,3" BorderThickness="0">
                <Border.OpacityMask>
                    <VisualBrush>
                        <VisualBrush.Visual>
                            <Border CornerRadius="10 4 4 10" Height="{Binding Path=ActualHeight ,RelativeSource={RelativeSource AncestorType={x:Type Border}}}" Width="{Binding Path=ActualWidth ,RelativeSource={RelativeSource AncestorType={x:Type Border}}}" Background="White"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Border.OpacityMask>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    
                    <Rectangle Grid.Column="0" Height="20" Fill="Red" Margin="0 0 0 0"></Rectangle>
                    <Grid Grid.Column="1" Margin="0">
                        <ComboBox x:Name="RedComboBox" Height="22" SelectionChanged="ComboBox_SelectionChanged" VerticalAlignment="Center" BorderThickness="0" >

                            <ComboBoxItem Content=""/>
                            <ComboBoxItem Content="Nuclear"/>
                            <ComboBoxItem Content="Antibody"/>
                            <ComboBoxItem Content="Membrane" IsSelected="True"/>
                        </ComboBox>
                    </Grid>

                </Grid>
            </Border>

            <Border Grid.Column="1" BorderBrush="DarkGray" Margin="0,0,10,3" BorderThickness="0">
                <Border.OpacityMask>
                    <VisualBrush>
                        <VisualBrush.Visual>
                            <Border CornerRadius="10 4 4 10" Height="{Binding Path=ActualHeight ,RelativeSource={RelativeSource AncestorType={x:Type Border}}}" Width="{Binding Path=ActualWidth ,RelativeSource={RelativeSource AncestorType={x:Type Border}}}" Background="White"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Border.OpacityMask>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>

                    <Rectangle Grid.Column="0" Height="20" Fill="Green" Margin="0 0 0 0"></Rectangle>
                    <Grid Grid.Column="1" Margin="0">
                        <ComboBox x:Name="GreenComboBox" Height="22" SelectionChanged="ComboBox_SelectionChanged" Margin="0" VerticalAlignment="Center" BorderThickness="0">
                            <ComboBoxItem Content=""/>
                            <ComboBoxItem Content="Nuclear"/>
                            <ComboBoxItem Content="Antibody" IsSelected="True"/>
                            <ComboBoxItem Content="Membrane"/>
                        </ComboBox>
                    </Grid>

                </Grid>
            </Border>

            <Border Grid.Column="2" BorderBrush="DarkGray" Margin="0,0,10,3" BorderThickness="0">
                <Border.OpacityMask>
                    <VisualBrush>
                        <VisualBrush.Visual>
                            <Border CornerRadius="10 4 4 10" Height="{Binding Path=ActualHeight ,RelativeSource={RelativeSource AncestorType={x:Type Border}}}" Width="{Binding Path=ActualWidth ,RelativeSource={RelativeSource AncestorType={x:Type Border}}}" Background="White"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Border.OpacityMask>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    
                    <Rectangle Grid.Column="0" Height="20" Fill="Blue" Margin="0 0 0 0"></Rectangle>
                    <Grid Grid.Column="1" Margin="0">
                        <ComboBox x:Name="BlueComboBox" Height="22" SelectionChanged="ComboBox_SelectionChanged" Margin="0" VerticalAlignment="Center" BorderThickness="0">
                            <ComboBoxItem Content=""/>
                            <ComboBoxItem Content="Nuclear" IsSelected="True"/>
                            <ComboBoxItem Content="Antibody"/>
                            <ComboBoxItem Content="Membrane"/>
                        </ComboBox>
                    </Grid>
                </Grid>
            </Border>
            <Label Foreground="#FFDDDDDD" Margin="-15,0,10,5" >Apparent magnification</Label>
            <Border Grid.Column="2" BorderBrush="DarkGray" Margin="0,0,10,3" BorderThickness="0">
                <Grid>
                    <Grid.ColumnDefinitions>

                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="1" Margin="2,1,0,1">
                        <ComboBox x:Name="ApparentMagnification" Margin="0" VerticalAlignment="Center" BorderThickness="0">
                            <ComboBoxItem Content="20X" IsSelected="True"/>
                            <ComboBoxItem Content="40X"/>
                        </ComboBox>
                    </Grid>
                </Grid>
            </Border>
            <Label Foreground="#FFDDDDDD" Margin="-15,0,10,5" >Size range (pixels)</Label>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="8"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="RangeMin" Grid.Column="0" Uid="0" TextChanged="RangeCheck_TextChanged" PreviewTextInput="Number_PreviewTextInput">10</TextBox>
                <TextBlock Grid.Column="1" Foreground="#dddddd" TextAlignment="Center">-</TextBlock>
                <TextBox x:Name="RangeMax" Grid.Column="2" Uid="23170" TextChanged="RangeCheck_TextChanged" PreviewTextInput="Number_PreviewTextInput">40</TextBox>
            </Grid>
            <Label Foreground="#FFDDDDDD" Margin="-15,0,10,5" >Threshold</Label>
            <Grid>
                <Grid.RowDefinitions>

                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="2,1,0,1">
                    <CheckBox x:Name="Threshold" Content="Auto" Foreground="#DDD" Margin="0 0 0 5" VerticalAlignment="Center" BorderThickness="0" IsChecked="True">

                    </CheckBox>
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                        <ColumnDefinition Width="23"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Slider Grid.Column="0" x:Name="ThresholdValue" AutoToolTipPlacement="TopLeft" Orientation="Horizontal" Minimum="0" Maximum="255" 
                        SmallChange="1" Value="128"  Background="#A70f0a16"
                        IsEnabled="{c:Binding ElementName=Threshold, Path=!IsChecked}"
                        ></Slider>
                    <TextBlock Grid.Column="1" Visibility="{Binding ElementName=Threshold, Path=IsChecked, Converter={StaticResource BoolToVisIvt}}"
                           Text="{Binding ElementName=ThresholdValue, Path=Value, Converter={StaticResource Dou2Str}}" Foreground="#EEEEEE"
                           Width="50"
                               />
                </Grid>

            </Grid>

            <Separator/>
            <CheckBox x:Name="Parallel" Content="Accelerate calculation" Foreground="#dddddd"></CheckBox>
            <StackPanel x:Name="SliderPanel">
                <Separator/>
                <Label Foreground="#FFDDDDDD" Margin="-15,0,10,5" >Pages</Label>
                <Controls:RangeSlider Style="{DynamicResource MahApps.Styles.RangeSlider.Win10}" x:Name="RangeSelector"
                
                Minimum="1"
                MinRangeWidth="1"
                MinRange="0"
                
                AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="0" IsSnapToTickEnabled="True"
                MoveWholeRange="False" IsMoveToPointEnabled="True" ExtendedMode="True">
                </Controls:RangeSlider>
                <Grid Margin="1 0 1 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Foreground="#DDDDDD" TextAlignment="Left">1</TextBlock>
                    <Grid Grid.Column="1" Margin="0 3 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Foreground="#DDDDDD" FontSize="8" TextAlignment="Right" Text="{Binding ElementName=RangeSelector, Path=LowerValue}"></TextBlock>
                        <TextBlock Grid.Column="1" Foreground="#DDDDDD" FontSize="8" TextAlignment="Center">-</TextBlock>
                        <TextBlock Grid.Column="2" Foreground="#DDDDDD" FontSize="8" TextAlignment="Left" Text="{Binding ElementName=RangeSelector, Path=UpperValue}"></TextBlock>
                    </Grid>
                    <TextBlock Grid.Column="4" Foreground="#DDDDDD" TextAlignment="Right" Text="{Binding ElementName=RangeSelector, Path=Maximum}"></TextBlock>
                </Grid>

            </StackPanel>

            <Separator/>

            
        </StackPanel>

        <!-- Accept or Cancel -->
        <StackPanel Grid.Row="3" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="10,5,10,5">
            <Button Width="70" Height="25" Margin="5,0,5,0" Name="okButton" Click="okButton_Click" IsDefault="True">OK</Button>
            <Button Width="70" Height="25" Margin="5,0,5,0" Name="cancelButton" IsCancel="True">Cancel</Button>
        </StackPanel>

        <Grid x:Name="waitingBlocker" Height="{Binding ElementName=thisWindow, Path=ActualHeight}" Width="{Binding ElementName=thisWindow, Path=ActualWidth}" Grid.Row="0" Grid.RowSpan="4" Background="#dd111111" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Name="Wait" FontFamily="Segoe MDL2 Assets" FontSize="50" Foreground="#EEEEEE" Text="" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,0">
                <TextBlock.RenderTransform>
                    <RotateTransform Angle="0" />
                </TextBlock.RenderTransform>
            </TextBlock>
            <TextBlock Grid.Row="1" x:Name="statusText" Foreground="#cccccc" MaxWidth="200" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="10,10,10,10" TextAlignment="Center" TextWrapping="Wrap">It will take about 2 minutes to initialize MetaLite-Server.</TextBlock>
        </Grid>

    </Grid >

</Window>